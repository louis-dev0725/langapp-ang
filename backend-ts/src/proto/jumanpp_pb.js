// source: jumanpp.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var juman_pb = require('./juman_pb.js');
goog.object.extend(proto, juman_pb);
goog.exportSymbol('proto.jumanpp.Lattice', null, global);
goog.exportSymbol('proto.jumanpp.LatticeNode', null, global);
goog.exportSymbol('proto.jumanpp.ScoreDetail', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jumanpp.LatticeNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.jumanpp.LatticeNode.repeatedFields_, null);
};
goog.inherits(proto.jumanpp.LatticeNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jumanpp.LatticeNode.displayName = 'proto.jumanpp.LatticeNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jumanpp.ScoreDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.jumanpp.ScoreDetail.repeatedFields_, null);
};
goog.inherits(proto.jumanpp.ScoreDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jumanpp.ScoreDetail.displayName = 'proto.jumanpp.ScoreDetail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.jumanpp.Lattice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.jumanpp.Lattice.repeatedFields_, null);
};
goog.inherits(proto.jumanpp.Lattice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.jumanpp.Lattice.displayName = 'proto.jumanpp.Lattice';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.jumanpp.LatticeNode.repeatedFields_ = [2,10,11,13,14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jumanpp.LatticeNode.prototype.toObject = function(opt_includeInstance) {
  return proto.jumanpp.LatticeNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jumanpp.LatticeNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jumanpp.LatticeNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    nodeId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    prevNodesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    startIndex: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    endIndex: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    surface: (f = jspb.Message.getField(msg, 5)) == null ? undefined : f,
    canonical: (f = jspb.Message.getField(msg, 6)) == null ? undefined : f,
    reading: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    dicform: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    pos: (f = msg.getPos()) && juman_pb.JumanPos.toObject(includeInstance, f),
    cumulativeScoresList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 10)) == null ? undefined : f,
    scoreDetailsList: jspb.Message.toObjectList(msg.getScoreDetailsList(),
    proto.jumanpp.ScoreDetail.toObject, includeInstance),
    ranksList: (f = jspb.Message.getRepeatedField(msg, 13)) == null ? undefined : f,
    featuresList: jspb.Message.toObjectList(msg.getFeaturesList(),
    juman_pb.JumanFeature.toObject, includeInstance),
    stringPos: (f = msg.getStringPos()) && juman_pb.JumanStringPos.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jumanpp.LatticeNode}
 */
proto.jumanpp.LatticeNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jumanpp.LatticeNode;
  return proto.jumanpp.LatticeNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jumanpp.LatticeNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jumanpp.LatticeNode}
 */
proto.jumanpp.LatticeNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNodeId(value);
      break;
    case 2:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setPrevNodesList(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStartIndex(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEndIndex(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSurface(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCanonical(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setReading(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDicform(value);
      break;
    case 9:
      var value = new juman_pb.JumanPos;
      reader.readMessage(value,juman_pb.JumanPos.deserializeBinaryFromReader);
      msg.setPos(value);
      break;
    case 10:
      var value = /** @type {!Array<number>} */ (reader.readPackedFloat());
      msg.setCumulativeScoresList(value);
      break;
    case 11:
      var value = new proto.jumanpp.ScoreDetail;
      reader.readMessage(value,proto.jumanpp.ScoreDetail.deserializeBinaryFromReader);
      msg.addScoreDetails(value);
      break;
    case 13:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setRanksList(value);
      break;
    case 14:
      var value = new juman_pb.JumanFeature;
      reader.readMessage(value,juman_pb.JumanFeature.deserializeBinaryFromReader);
      msg.addFeatures(value);
      break;
    case 15:
      var value = new juman_pb.JumanStringPos;
      reader.readMessage(value,juman_pb.JumanStringPos.deserializeBinaryFromReader);
      msg.setStringPos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jumanpp.LatticeNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jumanpp.LatticeNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jumanpp.LatticeNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jumanpp.LatticeNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getPrevNodesList();
  if (f.length > 0) {
    writer.writePackedUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPos();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      juman_pb.JumanPos.serializeBinaryToWriter
    );
  }
  f = message.getCumulativeScoresList();
  if (f.length > 0) {
    writer.writePackedFloat(
      10,
      f
    );
  }
  f = message.getScoreDetailsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.jumanpp.ScoreDetail.serializeBinaryToWriter
    );
  }
  f = message.getRanksList();
  if (f.length > 0) {
    writer.writePackedUint32(
      13,
      f
    );
  }
  f = message.getFeaturesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      14,
      f,
      juman_pb.JumanFeature.serializeBinaryToWriter
    );
  }
  f = message.getStringPos();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      juman_pb.JumanStringPos.serializeBinaryToWriter
    );
  }
};


/**
 * required uint32 node_id = 1;
 * @return {number}
 */
proto.jumanpp.LatticeNode.prototype.getNodeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.setNodeId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.clearNodeId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jumanpp.LatticeNode.prototype.hasNodeId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated uint32 prev_nodes = 2;
 * @return {!Array<number>}
 */
proto.jumanpp.LatticeNode.prototype.getPrevNodesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.setPrevNodesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.addPrevNodes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.clearPrevNodesList = function() {
  return this.setPrevNodesList([]);
};


/**
 * required uint32 start_index = 3;
 * @return {number}
 */
proto.jumanpp.LatticeNode.prototype.getStartIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.setStartIndex = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.clearStartIndex = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jumanpp.LatticeNode.prototype.hasStartIndex = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * required uint32 end_index = 4;
 * @return {number}
 */
proto.jumanpp.LatticeNode.prototype.getEndIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.setEndIndex = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.clearEndIndex = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jumanpp.LatticeNode.prototype.hasEndIndex = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * required string surface = 5;
 * @return {string}
 */
proto.jumanpp.LatticeNode.prototype.getSurface = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.setSurface = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.clearSurface = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jumanpp.LatticeNode.prototype.hasSurface = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * required string canonical = 6;
 * @return {string}
 */
proto.jumanpp.LatticeNode.prototype.getCanonical = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.setCanonical = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.clearCanonical = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jumanpp.LatticeNode.prototype.hasCanonical = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * required string reading = 7;
 * @return {string}
 */
proto.jumanpp.LatticeNode.prototype.getReading = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.setReading = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.clearReading = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jumanpp.LatticeNode.prototype.hasReading = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * required string dicform = 8;
 * @return {string}
 */
proto.jumanpp.LatticeNode.prototype.getDicform = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.setDicform = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.clearDicform = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jumanpp.LatticeNode.prototype.hasDicform = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * required JumanPos pos = 9;
 * @return {!proto.jumanpp.JumanPos}
 */
proto.jumanpp.LatticeNode.prototype.getPos = function() {
  return /** @type{!proto.jumanpp.JumanPos} */ (
    jspb.Message.getWrapperField(this, juman_pb.JumanPos, 9, 1));
};


/**
 * @param {!proto.jumanpp.JumanPos} value
 * @return {!proto.jumanpp.LatticeNode} returns this
*/
proto.jumanpp.LatticeNode.prototype.setPos = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.clearPos = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jumanpp.LatticeNode.prototype.hasPos = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * repeated float cumulative_scores = 10;
 * @return {!Array<number>}
 */
proto.jumanpp.LatticeNode.prototype.getCumulativeScoresList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 10));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.setCumulativeScoresList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.addCumulativeScores = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.clearCumulativeScoresList = function() {
  return this.setCumulativeScoresList([]);
};


/**
 * repeated ScoreDetail score_details = 11;
 * @return {!Array<!proto.jumanpp.ScoreDetail>}
 */
proto.jumanpp.LatticeNode.prototype.getScoreDetailsList = function() {
  return /** @type{!Array<!proto.jumanpp.ScoreDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.jumanpp.ScoreDetail, 11));
};


/**
 * @param {!Array<!proto.jumanpp.ScoreDetail>} value
 * @return {!proto.jumanpp.LatticeNode} returns this
*/
proto.jumanpp.LatticeNode.prototype.setScoreDetailsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.jumanpp.ScoreDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.jumanpp.ScoreDetail}
 */
proto.jumanpp.LatticeNode.prototype.addScoreDetails = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.jumanpp.ScoreDetail, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.clearScoreDetailsList = function() {
  return this.setScoreDetailsList([]);
};


/**
 * repeated uint32 ranks = 13;
 * @return {!Array<number>}
 */
proto.jumanpp.LatticeNode.prototype.getRanksList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 13));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.setRanksList = function(value) {
  return jspb.Message.setField(this, 13, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.addRanks = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 13, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.clearRanksList = function() {
  return this.setRanksList([]);
};


/**
 * repeated JumanFeature features = 14;
 * @return {!Array<!proto.jumanpp.JumanFeature>}
 */
proto.jumanpp.LatticeNode.prototype.getFeaturesList = function() {
  return /** @type{!Array<!proto.jumanpp.JumanFeature>} */ (
    jspb.Message.getRepeatedWrapperField(this, juman_pb.JumanFeature, 14));
};


/**
 * @param {!Array<!proto.jumanpp.JumanFeature>} value
 * @return {!proto.jumanpp.LatticeNode} returns this
*/
proto.jumanpp.LatticeNode.prototype.setFeaturesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 14, value);
};


/**
 * @param {!proto.jumanpp.JumanFeature=} opt_value
 * @param {number=} opt_index
 * @return {!proto.jumanpp.JumanFeature}
 */
proto.jumanpp.LatticeNode.prototype.addFeatures = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 14, opt_value, proto.jumanpp.JumanFeature, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.clearFeaturesList = function() {
  return this.setFeaturesList([]);
};


/**
 * optional JumanStringPos string_pos = 15;
 * @return {?proto.jumanpp.JumanStringPos}
 */
proto.jumanpp.LatticeNode.prototype.getStringPos = function() {
  return /** @type{?proto.jumanpp.JumanStringPos} */ (
    jspb.Message.getWrapperField(this, juman_pb.JumanStringPos, 15));
};


/**
 * @param {?proto.jumanpp.JumanStringPos|undefined} value
 * @return {!proto.jumanpp.LatticeNode} returns this
*/
proto.jumanpp.LatticeNode.prototype.setStringPos = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.jumanpp.LatticeNode} returns this
 */
proto.jumanpp.LatticeNode.prototype.clearStringPos = function() {
  return this.setStringPos(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jumanpp.LatticeNode.prototype.hasStringPos = function() {
  return jspb.Message.getField(this, 15) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.jumanpp.ScoreDetail.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jumanpp.ScoreDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.jumanpp.ScoreDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jumanpp.ScoreDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jumanpp.ScoreDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    linear: (f = jspb.Message.getOptionalFloatingPointField(msg, 1)) == null ? undefined : f,
    additionalList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jumanpp.ScoreDetail}
 */
proto.jumanpp.ScoreDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jumanpp.ScoreDetail;
  return proto.jumanpp.ScoreDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jumanpp.ScoreDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jumanpp.ScoreDetail}
 */
proto.jumanpp.ScoreDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLinear(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.addAdditional(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jumanpp.ScoreDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jumanpp.ScoreDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jumanpp.ScoreDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jumanpp.ScoreDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = message.getAdditionalList();
  if (f.length > 0) {
    writer.writeRepeatedFloat(
      2,
      f
    );
  }
};


/**
 * required float linear = 1;
 * @return {number}
 */
proto.jumanpp.ScoreDetail.prototype.getLinear = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.jumanpp.ScoreDetail} returns this
 */
proto.jumanpp.ScoreDetail.prototype.setLinear = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.jumanpp.ScoreDetail} returns this
 */
proto.jumanpp.ScoreDetail.prototype.clearLinear = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jumanpp.ScoreDetail.prototype.hasLinear = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated float additional = 2;
 * @return {!Array<number>}
 */
proto.jumanpp.ScoreDetail.prototype.getAdditionalList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.jumanpp.ScoreDetail} returns this
 */
proto.jumanpp.ScoreDetail.prototype.setAdditionalList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.jumanpp.ScoreDetail} returns this
 */
proto.jumanpp.ScoreDetail.prototype.addAdditional = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.jumanpp.ScoreDetail} returns this
 */
proto.jumanpp.ScoreDetail.prototype.clearAdditionalList = function() {
  return this.setAdditionalList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.jumanpp.Lattice.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.jumanpp.Lattice.prototype.toObject = function(opt_includeInstance) {
  return proto.jumanpp.Lattice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.jumanpp.Lattice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jumanpp.Lattice.toObject = function(includeInstance, msg) {
  var f, obj = {
    comment: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    nodesList: jspb.Message.toObjectList(msg.getNodesList(),
    proto.jumanpp.LatticeNode.toObject, includeInstance),
    scoresList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.jumanpp.Lattice}
 */
proto.jumanpp.Lattice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.jumanpp.Lattice;
  return proto.jumanpp.Lattice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.jumanpp.Lattice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.jumanpp.Lattice}
 */
proto.jumanpp.Lattice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    case 2:
      var value = new proto.jumanpp.LatticeNode;
      reader.readMessage(value,proto.jumanpp.LatticeNode.deserializeBinaryFromReader);
      msg.addNodes(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.addScores(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.jumanpp.Lattice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.jumanpp.Lattice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.jumanpp.Lattice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.jumanpp.Lattice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.jumanpp.LatticeNode.serializeBinaryToWriter
    );
  }
  f = message.getScoresList();
  if (f.length > 0) {
    writer.writeRepeatedFloat(
      3,
      f
    );
  }
};


/**
 * optional string comment = 1;
 * @return {string}
 */
proto.jumanpp.Lattice.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.jumanpp.Lattice} returns this
 */
proto.jumanpp.Lattice.prototype.setComment = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.jumanpp.Lattice} returns this
 */
proto.jumanpp.Lattice.prototype.clearComment = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.jumanpp.Lattice.prototype.hasComment = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated LatticeNode nodes = 2;
 * @return {!Array<!proto.jumanpp.LatticeNode>}
 */
proto.jumanpp.Lattice.prototype.getNodesList = function() {
  return /** @type{!Array<!proto.jumanpp.LatticeNode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.jumanpp.LatticeNode, 2));
};


/**
 * @param {!Array<!proto.jumanpp.LatticeNode>} value
 * @return {!proto.jumanpp.Lattice} returns this
*/
proto.jumanpp.Lattice.prototype.setNodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.jumanpp.LatticeNode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.jumanpp.LatticeNode}
 */
proto.jumanpp.Lattice.prototype.addNodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.jumanpp.LatticeNode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.jumanpp.Lattice} returns this
 */
proto.jumanpp.Lattice.prototype.clearNodesList = function() {
  return this.setNodesList([]);
};


/**
 * repeated float scores = 3;
 * @return {!Array<number>}
 */
proto.jumanpp.Lattice.prototype.getScoresList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.jumanpp.Lattice} returns this
 */
proto.jumanpp.Lattice.prototype.setScoresList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.jumanpp.Lattice} returns this
 */
proto.jumanpp.Lattice.prototype.addScores = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.jumanpp.Lattice} returns this
 */
proto.jumanpp.Lattice.prototype.clearScoresList = function() {
  return this.setScoresList([]);
};


goog.object.extend(exports, proto.jumanpp);
